{
    "StartAt": "Reserve Flight",
    "States": {
        "Reserve Flight": {
            "Type": "Task",
            "Resource": "arn:aws:states:::dynamodb:updateItem",
            "Parameters": {
                "TableName.$": "$.flightTable",
                "Key": {
                    "id": {
                        "S.$": "$.outboundFlightId"
                    }
                },
                "UpdateExpression": "SET seatAllocation = seatAllocation - :dec",
                "ExpressionAttributeValues": {
                    ":dec": {
                        "N": "1"
                    },
                    ":noSeat": {
                        "N": "0"
                    }
                },
                "ConditionExpression": "seatAllocation > :noSeat"
            },
            "TimeoutSeconds": 5,
            "Retry": [
                {
                    "ErrorEquals": [
                        "ProvisionedThroughputExceededException",
                        "RequestLimitExceeded",
                        "ServiceUnavailable",
                        "ThrottlingException"
                    ],
                    "IntervalSeconds": 1,
                    "BackoffRate": 2,
                    "MaxAttempts": 2
                },
                {
                    "ErrorEquals": [
                        "ConditionalCheckFailedException"
                    ],
                    "IntervalSeconds": 0,
                    "MaxAttempts": 0
                }
            ],
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Notify Booking Failed"
                }
            ],
            "Next": "Reserve Booking"
        },
        "Reserve Booking": {
            "Type": "Task",
            "Resource": "arn:aws:states:::dynamodb:putItem",
            "Parameters": {
                "TableName.$": "$.bookingTable",
                "Item": {
                    "id": {
                        "S": "$.bookingId"
                    },
                    "stateExecutionId": {
                        "S": "$.name"
                    },
                    "__typename": {
                        "S": "Booking"
                    },
                    "bookingOutboundFlightId": {
                        "S": "$.outboundFlightId"
                    },
                    "checkedIn": {
                        "BOOL": "False"
                    },
                    "customer": {
                        "S": "$.customerId"
                    },
                    "paymentToken": {
                        "S": "$.chargeId"
                    },
                    "status": {
                        "S": "UNCONFIRMED"
                    },
                    "createdAt": {
                        "S": "$.createdAt"
                    }
                }
            },
            "TimeoutSeconds": 5,
            "Retry": [
                {
                    "ErrorEquals": [
                        "ProvisionedThroughputExceededException",
                        "RequestLimitExceeded",
                        "ServiceUnavailable",
                        "ThrottlingException"
                    ],
                    "IntervalSeconds": 1,
                    "BackoffRate": 2,
                    "MaxAttempts": 2
                }
            ],
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Cancel Booking"
                }
            ],
            "Next": "Collect Payment"
        },
        "Release Flight Seat": {
            "Type": "Task",
            "Resource": "arn:aws:states:::dynamodb:updateItem",
            "Parameters": {
                "TableName.$": "$.flightTable",
                "Key": {
                    "id": {
                        "S": "$.outboundFlightId"
                    }
                },
                "UpdateExpression": "SET seatAllocation = seatAllocation +:inc",
                "ExpressionAttributeValues": {
                    ":inc": {
                        "N": "1"
                    }
                }
            },
            "TimeoutSeconds": 5,
            "Retry": [
                {
                    "ErrorEquals": [
                        "ProvisionedThroughputExceededException",
                        "RequestLimitExceeded",
                        "ServiceUnavailable",
                        "ThrottlingException"
                    ],
                    "IntervalSeconds": 1,
                    "BackoffRate": 2,
                    "MaxAttempts": 2
                }
            ],
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Notify Booking Failed"
                }
            ],
            "Next": "Notify Booking Failed"
        },
        "Collect Payment": {
            "Type": "Task",
            "Resource": "${CollectPayment.Arn}",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Cancel Booking"
                }
            ],
            "Next": "Confirm Booking"
        },
        "Cancel Booking": {
            "Type": "Task",
            "Resource": "arn:aws:states:::dynamodb:updateItem",
            "Parameters": {
                "TableName.$": "$.bookingTable",
                "Key": {
                    "id": {
                        "S": "$.bookingId"
                    }
                },
                "UpdateExpression": "SET #STATUS = :cancelled",
                "ExpressionAttributeNames": {
                    "#STATUS": "status"
                },
                "ExpressionAttributeValues": {
                    ":cancelled": {
                        "S": "CANCELLED"
                    }
                }
            },
            "TimeoutSeconds": 5,
            "Retry": [
                {
                    "ErrorEquals": [
                        "ProvisionedThroughputExceededException",
                        "RequestLimitExceeded",
                        "ServiceUnavailable",
                        "ThrottlingException"
                    ],
                    "IntervalSeconds": 1,
                    "BackoffRate": 2,
                    "MaxAttempts": 2
                }
            ],
            "Next": "Release Flight Seat"
        },
        "Confirm Booking": {
            "Type": "Task",
            "Resource": "${ConfirmBooking.Arn}",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Cancel Booking"
                }
            ],
            "Next": "Notify Booking Confirmed"
        },
        "Notify Booking Failed": {
            "Type": "Pass",
            "Next": "Booking Failed"
        },
        "Notify Booking Confirmed": {
            "Type": "Pass",
            "Next": "Booking Confirmed"
        },
        "Booking Failed": {
            "Type": "Fail"
        },
        "Booking Confirmed": {
            "Type": "Pass",
            "End": true
        }
    }
}